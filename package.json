{
  "$schema": "https://json.schemastore.org/package.json",
  "name": "speechmarkdown-vscode",
  "displayName": "Speech Markdown",
  "publisher": "WhetstoneTechnologiesInc",
  "description": "Language features for Speech Markdown",
  "icon": "images/smd-icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/speechmarkdown/speechmarkdown-vscode.git"
  },
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "license": "MIT",
  "version": "0.0.15",
  "preview": false,
  "author": {
    "name": "johniwasz"
  },
  "engines": {
    "vscode": "^1.88.0"
  },
  "categories": [
    "Snippets",
    "Formatters"
  ],
  "bugs": {
    "url": "https://github.com/speechmarkdown/speechmarkdown-vscode/issues"
  },
  "keywords": [
    "ssml",
    "speech markdown"
  ],
  "activationEvents": [
    "onLanguage:json",
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:yaml",
    "onLanguage:markdown"
  ],
  "main": "./dist/extension",
  "contributes": {
    "main": "./out/extension.js",
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets.json"
      },
      {
        "language": "typescript",
        "path": "./snippets.json"
      },
      {
        "language": "json",
        "path": "./snippets.json"
      },
      {
        "language": "speechmarkdown",
        "path": "./snippets.json"
      },
      {
        "language": "yaml",
        "path": "./snippets.json"
      }
    ],
    "configuration": {
      "title": "SpeechMarkdown",
      "properties": {
        "speechmarkdown.outputDir": {
          "type": "string",
          "default": "",
          "description": "Directory to save TTS audio files (uses '~/tts-output' if blank)."
        },
        "speechmarkdown.includeSpeakTags": {
          "type": "boolean",
          "default": true,
          "description": "Include open and close speech tags around generated SSML."
        },
        "speechmarkdown.includeParagraphTags": {
          "type": "boolean",
          "default": false,
          "description": "Include paragraph tags in generated SSML."
        },
        "speechmarkdown.includeFormatterComment": {
          "type": "boolean",
          "default": false,
          "description": "Include formatter comments in generated SSML."
        },
        "speechmarkdown.preserveEmptyLines": {
          "type": "boolean",
          "default": false,
          "description": "Keep empty lines in generated SSML."
        },
        "speechmarkdown.aws.accessKeyId": {
          "type": "string",
          "default": "",
          "description": "AWS account access key id. If blank, then the AWS_ACCESS_KEY_ID environment variable is used."
        },
        "speechmarkdown.aws.secretAccessKey": {
          "type": "string",
          "default": "",
          "description": "AWS account secret access key. If blank, then the AWS_SECRET_ACCESS_KEY environment variable is used."
        },
        "speechmarkdown.aws.region": {
          "type": "string",
          "enum": [
            "",
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "af-south-1",
            "ap-east-1",
            "ap-south-1",
            "ap-northeast-1",
            "ap-northeast-2",
            "ap-northeast-3",
            "ap-southeast-1",
            "ap-southeast-2",
            "ca-central-1",
            "eu-central-1",
            "eu-west-1",
            "eu-west-2",
            "eu-west-3",
            "eu-north-1",
            "me-south-1",
            "sa-east-1",
            "us-gov-west-1"
          ],
          "default": "us-east-1",
          "markdownDescription": "[AWS Regions](https://docs.aws.amazon.com/general/latest/gr/pol.html) that support Polly. Not all AWS regions support Polly. If the setting is blank, then the AWS_DEFAULT_REGION environment variable is used."
        },
        "speechmarkdown.aws.pollyDefaultVoice": {
          "type": "string",
          "default": "Kendra",
          "markdownDescription": "Default voice to use for Polly. A full list of voices is available [here](https://docs.aws.amazon.com/polly/latest/dg/voicelist.html)."
        },
        "speechmarkdown.elevenLabs.apiKey": {
          "type": "string",
          "description": "ElevenLabs API Key"
        },
        "speechmarkdown.elevenLabs.voiceId": {
          "type": "string",
          "default": "",
          "description": "Voice ID from your ElevenLabs account"
        },
        "speechmarkdown.google.keyFilePath": {
          "type": "string",
          "description": "Path to Google Cloud service account JSON key"
        },
        "speechmarkdown.playht.apiKey": {
          "type": "string",
          "description": "PlayHT API Key"
        },
        "speechmarkdown.playht.userId": {
          "type": "string",
          "description": "PlayHT User ID"
        },
        "speechmarkdown.watson.apiKey": {
          "type": "string",
          "description": "IBM Watson API Key"
        },
        "speechmarkdown.watson.region": {
          "type": "string",
          "description": "IBM Watson Region"
        },
        "speechmarkdown.watson.instanceId": {
          "type": "string",
          "description": "IBM Watson Instance ID"
        },
        "speechmarkdown.witai.token": {
          "type": "string",
          "description": "WitAI Token"
        },
        "speechmarkdown.sapi": {
          "type": "boolean",
          "default": false,
          "description": "Enable Windows SAPI TTS (Windows only)"
        },
        "speechmarkdown.espeak": {
          "type": "boolean",
          "default": false,
          "description": "Enable eSpeak NG TTS (Node.js only)"
        },
        "speechmarkdown.espeakWasm": {
          "type": "boolean",
          "default": false,
          "description": "Enable eSpeak NG WASM TTS (browser/Node.js)"
        },
        "speechmarkdown.ttsProvider": {
          "type": "string",
          "enum": [
            "Amazon Polly",
            "ElevenLabs",
            "OpenAI",
            "Azure",
            "SherpaOnnx",
            "Google",
            "PlayHT",
            "IBM Watson",
            "WitAI",
            "SAPI",
            "eSpeak NG",
            "eSpeak NG WASM"
          ],
          "default": "Amazon Polly",
          "description": "TTS Provider for speech playback"
        },
        "speechmarkdown.openai.apiKey": {
          "type": "string",
          "description": "Your OpenAI API key for TTS"
        },
        "speechmarkdown.openai.voice": {
          "type": "string",
          "description": "Voice to use for OpenAI TTS (e.g., alloy, echo, fable, onyx, nova, shimmer)."
        },
        "speechmarkdown.openai.model": {
          "type": "string",
          "default": "gpt-4o-mini-tts",
          "description": "TTS model to use (e.g., gpt-4o-mini-tts)"
        },
        "speechmarkdown.azure.subscriptionKey": {
          "type": "string",
          "description": "Azure subscription key for TTS"
        },
        "speechmarkdown.azure.region": {
          "type": "string",
          "default": "eastus",
          "description": "Azure region for TTS (e.g., eastus, westus, westeurope)"
        },
        "speechmarkdown.aws.voice": {
          "type": "string",
          "description": "Default voice to use for Amazon Polly."
        },
        "speechmarkdown.azure.voice": {
          "type": "string",
          "description": "Voice to use for Azure TTS (e.g., en-US-AriaNeural)."
        },
        "speechmarkdown.google.voice": {
          "type": "string",
          "description": "Voice to use for Google TTS."
        },
        "speechmarkdown.playht.voice": {
          "type": "string",
          "description": "Voice to use for PlayHT TTS."
        },
        "speechmarkdown.watson.voice": {
          "type": "string",
          "description": "Voice to use for IBM Watson TTS."
        },
        "speechmarkdown.witai.voice": {
          "type": "string",
          "description": "Voice to use for WitAI TTS."
        },
        "speechmarkdown.sapi.voice": {
          "type": "string",
          "description": "Voice to use for Windows SAPI TTS."
        },
        "speechmarkdown.espeak.voice": {
          "type": "string",
          "description": "Voice to use for eSpeak NG TTS."
        },
        "speechmarkdown.espeakWasm.voice": {
          "type": "string",
          "description": "Voice to use for eSpeak NG WASM TTS."
        },
        "speechmarkdown.sherpa.voice": {
          "type": "string",
          "description": "Voice to use for SherpaOnnx TTS."
        }
      }
    },
    "keybindings": [
      {
        "command": "speechmarkdown.speakText",
        "key": "ctrl+shift+s",
        "when": "editorTextFocus"
      },
      {
        "command": "speechmarkdown.selectTTSProvider",
        "key": "ctrl+alt+p",
        "when": "editorTextFocus"
      },
      {
        "command": "speechmarkdown.listVoices",
        "key": "ctrl+shift+l",
        "when": "editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "speechmarkdown.speakText",
        "title": "Speak Text (TTS)"
      },
      {
        "command": "extension.speechmarkdownpreview",
        "title": "Speech Markdown to SSML",
        "category": "Speech Markdown"
      },
      {
        "command": "extension.speechmarkdownspeakpolly",
        "title": "Speak Selected SSML (Amazon Polly)",
        "category": "Speech Markdown"
      },
      {
        "command": "extension.speechmarkdownspeakpollyneural",
        "title": "Speak Selected SSML (Amazon Neural)",
        "category": "Speech Markdown"
      },
      {
        "command": "speechmarkdown.listVoices",
        "title": "SpeechMarkdown: List Voices",
        "category": "Speech Markdown"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.speechmarkdownpreview",
          "group": "speechmarkdown@1",
          "when": "editorHasSelection"
        },
        {
          "command": "extension.speechmarkdownspeakpolly",
          "group": "speechmarkdown@1",
          "when": "editorHasSelection"
        },
        {
          "command": "extension.speechmarkdownspeakpollyneural",
          "group": "speechmarkdown@1",
          "when": "editorHasSelection"
        }
      ]
    },
    "languages": [
      {
        "id": "speechmarkdown",
        "aliases": [
          "Speech Markdown",
          "speechmarkdown"
        ],
        "extensions": [
          ".smd",
          ".speechmarkdown",
          ".txt",
          ".md"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "speechmarkdown",
        "scopeName": "text.speechmarkdown",
        "path": "./syntaxes/speechmarkdown-expressions.json"
      },
      {
        "path": "./syntaxes/text.speechmarkdown.injection.json",
        "scopeName": "text.speechmarkdown.injection",
        "injectTo": [
          "source.js",
          "source.json",
          "source.yaml",
          "text.yaml.jinja",
          "source.ts"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "build-watch": "tsc --watch",
    "build": "tsc"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.13.10",
    "@types/sound-play": "^1.1.3",
    "@types/tmp": "^0.2.6",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.27.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.24.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.2",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "languages": [
    {
      "id": "speechmarkdown",
      "aliases": [
        "Speech Markdown",
        "speechmarkdown"
      ],
      "extensions": [
        ".smd",
        ".speechmarkdown",
        ".txt",
        ".md"
      ],
      "configuration": "./language-configuration.json"
    }
  ],
  "grammars": [
    {
      "language": "speechmarkdown",
      "scopeName": "text.speechmarkdown",
      "path": "./syntaxes/speechmarkdown-expressions.json"
    }
  ],
  "dependencies": {
    "@aws-sdk/client-polly": "latest",
    "@google-cloud/text-to-speech": "latest",
    "bufferutil": "^4.0.9",
    "decompress": "latest",
    "decompress-bzip2": "latest",
    "decompress-tarbz2": "latest",
    "decompress-targz": "latest",
    "fs": "^0.0.1-security",
    "js-tts-wrapper": "^0.1.38",
    "latest": "^0.2.0",
    "mespeak": "^2.0.2",
    "microsoft-cognitiveservices-speech-sdk": "latest",
    "node-fetch": "^2",
    "openai": "latest",
    "pcm-convert": "latest",
    "say": "latest",
    "sherpa-onnx-node": "latest",
    "sound-play": "latest",
    "speechmarkdown-js": "^2.1.0",
    "tar-stream": "latest",
    "text2wav": "^0.0.14",
    "tmp": "^0.2.3",
    "utf-8-validate": "^5.0.10"
  }
}
